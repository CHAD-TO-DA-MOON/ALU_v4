/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  localparam DIV = 5'h10;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [(3'h5+0)-1:0] M_button_cond_out;
  reg [(3'h5+0)-1:0] M_button_cond_in;
  
  genvar GEN_button_cond0;
  generate
  for (GEN_button_cond0=0;GEN_button_cond0<3'h5;GEN_button_cond0=GEN_button_cond0+1) begin: button_cond_gen_0
    button_conditioner_2 button_cond (
      .clk(clk),
      .in(M_button_cond_in[GEN_button_cond0*(1)+(1)-1-:(1)]),
      .out(M_button_cond_out[GEN_button_cond0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [(3'h5+0)-1:0] M_buttondetector_out;
  reg [(3'h5+0)-1:0] M_buttondetector_in;
  
  genvar GEN_buttondetector0;
  generate
  for (GEN_buttondetector0=0;GEN_buttondetector0<3'h5;GEN_buttondetector0=GEN_buttondetector0+1) begin: buttondetector_gen_0
    edge_detector_3 buttondetector (
      .clk(clk),
      .in(M_buttondetector_in[GEN_buttondetector0*(1)+(1)-1-:(1)]),
      .out(M_buttondetector_out[GEN_buttondetector0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  wire [16-1:0] M_manual_t_out;
  wire [1-1:0] M_manual_t_z;
  wire [1-1:0] M_manual_t_v;
  wire [1-1:0] M_manual_t_n;
  reg [1-1:0] M_manual_t_proceed;
  reg [16-1:0] M_manual_t_data;
  manual_test_4 manual_t (
    .clk(clk),
    .rst(rst),
    .proceed(M_manual_t_proceed),
    .data(M_manual_t_data),
    .out(M_manual_t_out),
    .z(M_manual_t_z),
    .v(M_manual_t_v),
    .n(M_manual_t_n)
  );
  wire [7-1:0] M_multiSeg_seg;
  wire [4-1:0] M_multiSeg_sel;
  reg [16-1:0] M_multiSeg_values;
  multi_seven_segment_5 multiSeg (
    .clk(clk),
    .rst(rst),
    .values(M_multiSeg_values),
    .seg(M_multiSeg_seg),
    .sel(M_multiSeg_sel)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_button_cond_in = io_button;
    M_buttondetector_in = M_button_cond_out;
    M_manual_t_proceed = M_buttondetector_out[0+0-:1];
    M_manual_t_data[0+7-:8] = io_dip[0+7-:8];
    M_manual_t_data[8+7-:8] = io_dip[8+7-:8];
    io_led[8+7-:8] = M_manual_t_out[8+7-:8];
    io_led[0+7-:8] = M_manual_t_out[0+7-:8];
    M_multiSeg_values = M_manual_t_out;
    io_seg = ~M_multiSeg_seg;
    io_sel = ~M_multiSeg_sel;
  end
endmodule
